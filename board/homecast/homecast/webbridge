#!/bin/sh

SCRIPT_NAME="webbridge.sh"
SOURCE=/metrological

cleanup() {
	echo "${SCRIPT_NAME}: '$1'"
	# Shutdown all our processes in non stub version
	if [ ! -f $SOURCE/homecast/webbridge-stub ]; then
		killall -9 rpcprocess 2>/dev/null
		killall -9 WPEWebProcess 2>/dev/null
		killall -9 WPENetworkProcess 2>/dev/null
		killall -9 WPEDatabaseProcess 2>/dev/null
		WEBBRIDGE=$(ps | grep '/usr/bin/webbridge' | grep -v grep | awk '{print $1}')
		if [ "$WEBBRIDGE" != "" ]; then
			kill -9 $WEBBRIDGE
		fi
	fi
}

# Start by swapping out the RO SQUASHFS for a NFS R/W file system.
if [ ! -d $SOURCE ]; then
	mkdir /tmp/nfsrootfs
	mkdir /tmp/nfsrootfs/squashfs
	cd /tmp/nfsrootfs
	./usr/sbin/root_pivot . squashfs
	mount none /proc -t proc
	mount none /sys -t sysfs
	mount none /dev/pts -t devpts
fi

# Symlink /etc
ln -sfn $SOURCE/etc/playready /etc/playready
ln -sfn $SOURCE/etc/ssl /etc/ssl
ln -sfn $SOURCE/etc/fonts /etc/fonts

# Symlink /usr/lib
ln -sfn $SOURCE/usr/lib/gio /usr/lib/gio

# Symlink /usr/share
mkdir -p /usr/share/fonts
ln -sfn $SOURCE/usr/share/mime /usr/share/mime
ln -sfn $SOURCE/usr/share/X11 /usr/share/X11
ln -sfn $SOURCE/usr/share/fonts/ttf-bitstream-vera /usr/share/fonts/ttf-bitstream-vera

# Symlink /root
rm -rf $SOURCE/root
mkdir -p $STORAGE_PATH/app
ln -sfn $STORAGE_PATH/app $SOURCE/root

# Netflix
if [ ! -d $SOURCE/root/Netflix ]; then
	mkdir -p $SOURCE/root/Netflix/dpi
	ln -sfn /etc/playready $SOURCE/root/Netflix/dpi/playready
fi

# Firewall for non-prod builds
iptables -I INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT

# Shutdown all our processes in non stub version
cleanup restart

# Exports
export HOME=$SOURCE/root
export PATH=$SOURCE/usr/bin:/bin:/usr/bin
export GST_PLUGIN_PATH=$SOURCE/usr/lib/gstreamer-1.0
export GST_PLUGIN_SCANNER=$SOURCE/usr/libexec/gstreamer-1.0/gst-plugin-scanner
export LD_LIBRARY_PATH=$SOURCE/lib:$SOURCE/usr/lib:$SOURCE/usr/lib/gstreamer-1.0:/lib/:/usr/lib
export DISABLE_FRAMERATE_UPDATE=1

# Short sleep
sleep 3

# WebBridge
if [ ! -f $SOURCE/NDS/webbridge-stub ]; then
	echo "${SCRIPT_NAME}: launching 'real' webbridge"
	$SOURCE/usr/bin/webbridge -c $SOURCE/etc/webbridge/config.json
else
	ACTIVEPROCESS=`ps | grep webbridge-stub | grep -v grep`
	if [ "x$ACTIVEPROCESS" == "x" ]; then
		echo "${SCRIPT_NAME}: launching 'stub' webbridge"
		$SOURCE/homecast/webbridge-stub
	else
		# ulimit for core dump
		mkdir -p $HOME/cores
		echo "$HOME/cores/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern
		ulimit -c unlimited
		echo "${SCRIPT_NAME}: launching 'dev' webbridge"
		$SOURCE/usr/bin/webbridge -c $SOURCE/etc/webbridge/config.json
	fi
fi
