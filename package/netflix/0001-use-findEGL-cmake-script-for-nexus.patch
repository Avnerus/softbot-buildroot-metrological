diff --git a/netflix/cmake/FindEGL.cmake b/netflix/cmake/FindEGL.cmake
new file mode 100644
index 0000000..5bb1d9e
--- /dev/null
+++ b/netflix/cmake/FindEGL.cmake
@@ -0,0 +1,60 @@
+# - Try to find wayland-egl.
+# Once done, this will define
+#
+#  WAYLAND_EGL_FOUND - system has wayland-egl.
+#  WAYLAND_EGL_INCLUDE_DIRS - the wayland-egl include directories
+#  WAYLAND_EGL_LIBRARIES - link these to use wayland-egl.
+#
+# Copyright (C) 2017 Metrological B.V.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+# 1.  Redistributions of source code must retain the above copyright
+#     notice, this list of conditions and the following disclaimer.
+# 2.  Redistributions in binary form must reproduce the above copyright
+#     notice, this list of conditions and the following disclaimer in the
+#     documentation and/or other materials provided with the distribution.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS
+# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS
+# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
+# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
+# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
+# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+find_package(PkgConfig)
+pkg_check_modules(PC_EGL egl)
+
+if (PC_EGL_FOUND)
+    set(EGL_CFLAFS ${PC_EGL_CFLAGS})
+    set(EGL_DEFINITIONS ${PC_EGL_CFLAGS_OTHER})
+    set(EGL_NAMES ${PC_EGL_LIBRARIES})
+    foreach (_library ${EGL_NAMES})
+        find_library(EGL_LIBRARIES_${_library} ${_library}
+        HINTS ${PC_EGL_LIBDIR} ${PC_EGL_LIBRARY_DIRS}
+        )
+        set(EGL_LIBRARIES ${EGL_LIBRARIES} ${EGL_LIBRARIES_${_library}})
+    endforeach ()
+else ()
+    set(EGL_NAMES ${EGL_NAMES} egl EGL)
+    find_library(EGL_LIBRARIES NAMES ${EGL_NAMES}
+        HINTS ${PC_EGL_LIBDIR} ${PC_EGL_LIBRARY_DIRS}
+    )
+endif ()
+
+find_path(EGL_INCLUDE_DIRS NAMES EGL/egl.h
+    HINTS ${PC_EGL_INCLUDEDIR} ${PC_EGL_INCLUDE_DIRS}
+)
+
+set(EGL_INCLUDE_DIRS ${PC_EGL_INCLUDE_DIRS} CACHE FILEPATH "FIXME")
+
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(WAYLAND_EGL DEFAULT_MSG WAYLAND_EGL_FOUND)
+
+mark_as_advanced(WAYLAND_EGL_INCLUDE_DIRS WAYLAND_EGL_LIBRARIES)
diff --git a/partner/graphics/nexus/gibbon_graphics.cmake b/partner/graphics/nexus/gibbon_graphics.cmake
index 581c119..07d5b3f 100644
--- a/partner/graphics/nexus/gibbon_graphics.cmake
+++ b/partner/graphics/nexus/gibbon_graphics.cmake
@@ -30,12 +30,12 @@ if(GIBBON_GRAPHICS_GL_WSYS STREQUAL "egl")
     gibbon_add_sources(OpenGLContextEGL.cpp)
 
     set(GIBBON_GRAPHICSENGINE_GLES2_EGL TRUE)
-    if (NO_NXCLIENT)
-        gibbon_add_libraries(GLESv2 EGL nexus nxpl)
-        add_definitions(-DNO_NXCLIENT)
-    else ()
-        gibbon_add_libraries(GLESv2 EGL nexus nxpl nxclient)
-    endif ()
+
+    find_package(EGL REQUIRED)
+    gibbon_add_libraries(${EGL_LIBRARIES})
+    gibbon_add_includes(${EGL_INCLUDE_DIRS})
+    gibbon_add_extra_cflags(${EGL_CFLAGS})
+
     add_definitions(-DEGL_EGLEXT_PROTOTYPES=1 -DBROADCOM_PLATFORM=1)
 else()
     message(FATAL_ERROR "Unrecognized GL subsystem: ${GIBBON_GRAPHICS_GL_WSYS}")
