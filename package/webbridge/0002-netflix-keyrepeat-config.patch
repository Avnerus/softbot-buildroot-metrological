diff --git a/Plugins/Netflix/NetflixImplementation.cpp b/Plugins/Netflix/NetflixImplementation.cpp
index 153f09b..c4a7850 100644
--- a/Plugins/Netflix/NetflixImplementation.cpp
+++ b/Plugins/Netflix/NetflixImplementation.cpp
@@ -47,7 +47,9 @@ public:
             Model(),
             Language(),
             IPv6(false),
-            QueryString() {
+            QueryString(),
+            KeyAutoRepeatDelay(500),
+            KeyAutoRepeatInterval(200) {
             Add(_T("provisioning"), &Provisioning);
             Add(_T("startsuspended"), &StartSuspended);
             Add(_T("version"), &Version);
@@ -55,6 +57,8 @@ public:
             Add(_T("language"), &Language);
             Add(_T("ipv6"), &IPv6);
             Add(_T("querystring"), &QueryString);
+            Add(_T("keyrepeatdelay"), &KeyAutoRepeatDelay);
+            Add(_T("keyrepeatinterval"), &KeyAutoRepeatInterval);
         }
         ~Config() {
         }
@@ -67,6 +71,8 @@ public:
         Generics::JSON::String Language;
         Generics::JSON::Boolean IPv6;
         Generics::JSON::String QueryString;
+        Generics::JSON::DecUInt16 KeyAutoRepeatDelay;
+        Generics::JSON::DecUInt16 KeyAutoRepeatInterval;
     };
 
     class NotificationSink : public Generics::Thread {
@@ -262,6 +268,22 @@ public:
             Generics::SystemInfo::Environment(_T("NF_UI_QUERY_STRING"), _config.StartSuspended.Value() ? "source_type=22" : "source_type=2" );
         }
 
+        if ((_config.Language.IsSet() == true) && (_config.Language.Value().empty() == false))
+            Generics::SystemInfo::Environment(_T("NF_DPI_LANGUAGE"), _config.Language.Value());
+
+        if ((_config.Language.IsSet() == true) && (_config.Language.Value().empty() == false))
+            Generics::SystemInfo::Environment(_T("NF_DPI_LANGUAGE"), _config.Language.Value());
+
+        if (_config.KeyAutoRepeatDelay.IsSet() == true) {
+            Generics::NumberType<uint16>keyAutoRepeatDelay(_config.KeyAutoRepeatDelay.Value());
+            Generics::SystemInfo::Environment(_T("NF_KEY_REPEAT_DELAY"), keyAutoRepeatDelay.Text());
+        }
+
+        if (_config.KeyAutoRepeatInterval.IsSet() == true) {
+            Generics::NumberType<uint16>keyAutoRepeatInterval(_config.KeyAutoRepeatInterval.Value());
+            Generics::SystemInfo::Environment(_T("NF_KEY_REPEAT_INTERVAL"), keyAutoRepeatInterval.Text());
+        }
+
 #ifdef FRIENDLY_NAME
         Generics::SystemInfo::Environment(_T("NF_DPI_FRIENDLYNAME"), FRIENDLY_NAME);
 #endif
diff --git a/Plugins/Netflix/CMakeLists.txt b/Plugins/Netflix/CMakeLists.txt
index d7a3bad..77a3d2e 100644
--- a/Plugins/Netflix/CMakeLists.txt
+++ b/Plugins/Netflix/CMakeLists.txt
@@ -5,6 +5,8 @@ set(WEBBRIDGE_PLUGIN_NETFLIX_AUTOSTART false CACHE STRING false)
 set(WEBBRIDGE_PLUGIN_NETFLIX_STARTSUSPENDED false CACHE STRING false)
 set(WEBBRIDGE_PLUGIN_NETFLIX_VERSION false CACHE STRING "1.0-metrological")
 set(WEBBRIDGE_PLUGIN_NETFLIX_MODEL false CACHE STRING "Metrological")
+set(WEBBRIDGE_PLUGIN_NETFLIX_KEYREPEATDELAY false CACHE STRING 500)
+set(WEBBRIDGE_PLUGIN_NETFLIX_KEYREPEATINTERVAL false CACHE STRING 200)
 
 set(WEBBRIDGE_PLUGIN_DIALSERVER_NAME false CACHE STRING "[TV] WebBridge")
 if(WEBBRIDGE_PLUGIN_DIALSERVER_NAME)
@@ -45,6 +47,8 @@ map()
     kv(startsuspended ${WEBBRIDGE_PLUGIN_NETFLIX_STARTSUSPENDED})
     kv(version ${WEBBRIDGE_PLUGIN_NETFLIX_VERSION})
     kv(model ${WEBBRIDGE_PLUGIN_NETFLIX_MODEL})
+    kv(keyrepeatdelay ${WEBBRIDGE_PLUGIN_NETFLIX_KEYREPEATDELAY})
+    kv(keyrepeatinterval ${WEBBRIDGE_PLUGIN_NETFLIX_KEYREPEATINTERVAL})
   end()
 end()
 ans(WEBBRIDGE_PLUGIN_CONFIG)
