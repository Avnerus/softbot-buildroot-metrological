From d9a63856b56b285bbe8861596fb792326d279744 Mon Sep 17 00:00:00 2001
From: Bram Oosterhuis <bram.oosterhuis.nl@gmail.com>
Date: Mon, 3 Apr 2017 18:58:39 +0200
Subject: [PATCH] Appling 0102-video-play-hide-osd.patch

---
 Source/WebCore/PlatformWPE.cmake                       |  4 ++++
 .../graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp | 18 ++++++++++++++++--
 .../graphics/gstreamer/MediaPlayerPrivateGStreamer.h   |  2 ++
 Source/cmake/FindRTKlibs.cmake                         | 11 +++++++++++
 4 files changed, 33 insertions(+), 2 deletions(-)
 create mode 100644 Source/cmake/FindRTKlibs.cmake

diff --git a/Source/WebCore/PlatformWPE.cmake b/Source/WebCore/PlatformWPE.cmake
index 4afa81c..0e98c69 100644
--- a/Source/WebCore/PlatformWPE.cmake
+++ b/Source/WebCore/PlatformWPE.cmake
@@ -3,6 +3,8 @@ include(platform/ImageDecoders.cmake)
 include(platform/Linux.cmake)
 include(platform/TextureMapper.cmake)
 
+find_package(RTKlibs REQUIRED)
+
 list(APPEND WebCore_INCLUDE_DIRECTORIES
     "${DERIVED_SOURCES_JAVASCRIPTCORE_DIR}"
     "${DERIVED_SOURCES_JAVASCRIPTCORE_DIR}/inspector"
@@ -215,6 +217,7 @@ list(APPEND WebCore_LIBRARIES
     ${OCDM_LIBRARIES}
     ${SQLITE_LIBRARIES}
     ${WPE_LIBRARIES}
+    ${REALTEK_LIBRARIES}
 )
 
 list(APPEND WebCore_INCLUDE_DIRECTORIES
@@ -233,6 +236,7 @@ list(APPEND WebCore_INCLUDE_DIRECTORIES
     ${OCDM_INCLUDE_DIRS}
     ${SQLITE_INCLUDE_DIR}
     ${WPE_INCLUDE_DIRS}
+    ${REALTEK_INCLUDE_DIRS}
 )
 
 if (ENABLE_SUBTLE_CRYPTO)
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
index 3034e2b..d5faf91 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -27,6 +27,7 @@
 #include "MediaPlayerPrivateGStreamer.h"
 
 #if ENABLE(VIDEO) && USE(GSTREAMER)
+#include "VOutUtilWrap.h"
 
 #include "GStreamerUtilities.h"
 #include "URL.h"
@@ -177,6 +178,7 @@ MediaPlayerPrivateGStreamer::MediaPlayerPrivateGStreamer(MediaPlayer* player)
     , m_totalBytes(0)
     , m_preservesPitch(false)
     , m_lastQuery(-1)
+    , m_hideOSDDuringPlaying(false)
 #if ENABLE(WEB_AUDIO)
     , m_audioSourceProvider(std::make_unique<AudioSourceProviderGStreamer>())
 #endif
@@ -184,6 +186,10 @@ MediaPlayerPrivateGStreamer::MediaPlayerPrivateGStreamer(MediaPlayer* player)
 #if USE(GLIB) && !PLATFORM(EFL)
     m_readyTimerHandler.setPriority(G_PRIORITY_DEFAULT_IDLE);
 #endif
+    String envHideOSD(std::getenv("HIDE_OSD_DURING_PLAY"));
+   if (!envHideOSD.isEmpty()) {
+       m_hideOSDDuringPlaying = true;
+   } 
 }
 
 MediaPlayerPrivateGStreamer::~MediaPlayerPrivateGStreamer()
@@ -491,6 +497,9 @@ void MediaPlayerPrivateGStreamer::play()
     }
 
     if (changePipelineState(GST_STATE_PLAYING)) {
+        if(m_hideOSDDuringPlaying) {
+            VOutUtilWrap_disable_osd1();
+        }
         m_isEndReached = false;
         m_delayingLoad = false;
         m_preload = MediaPlayer::Auto;
@@ -509,10 +518,15 @@ void MediaPlayerPrivateGStreamer::pause()
     if (currentState < GST_STATE_PAUSED && pendingState <= GST_STATE_PAUSED)
         return;
 
-    if (changePipelineState(GST_STATE_PAUSED))
+    if (changePipelineState(GST_STATE_PAUSED)) {
         GST_INFO("Pause");
-    else
+        if(m_hideOSDDuringPlaying) {
+            VOutUtilWrap_enable_osd1();
+        }
+    }
+    else {
         loadingFailed(MediaPlayer::Empty);
+    }
 }
 
 MediaTime MediaPlayerPrivateGStreamer::durationMediaTime() const
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
index b440177..6ea8a4d 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
@@ -169,6 +169,8 @@ private:
     bool didPassCORSAccessCheck() const override;
     bool canSaveMediaData() const override;
 
+    bool m_hideOSDDuringPlaying;
+    
 protected:
     bool m_buffering;
     int m_bufferingPercentage;
diff --git a/Source/cmake/FindRTKlibs.cmake b/Source/cmake/FindRTKlibs.cmake
new file mode 100644
index 0000000..42d6405
--- /dev/null
+++ b/Source/cmake/FindRTKlibs.cmake
@@ -0,0 +1,11 @@
+find_package(PkgConfig)
+pkg_check_modules(REALTEK kylin-platform-lib)
+
+include(FindPackageHandleStandardArgs)
+
+message("-- REALTEK_LIBRARIES  ${REALTEK_LIBRARIES}")
+message("-- REALTEK_INCLUDE_DIRS ${REALTEK_INCLUDE_DIRS}")
+
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(REALTEK DEFAULT_MSG REALTEK_LIBRARIES)
+
+mark_as_advanced(REALTEK_INCLUDE_DIRS REALTEK_LIBRARIES)
\ No newline at end of file
-- 
2.7.4

