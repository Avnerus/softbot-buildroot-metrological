diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
index 94ad61d6b7e..83abc9877ec 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -239,6 +239,19 @@ MediaPlayerPrivateGStreamer::~MediaPlayerPrivateGStreamer()
         gst_bus_set_sync_handler(bus.get(), nullptr, nullptr, nullptr);
         g_signal_handlers_disconnect_matched(m_pipeline.get(), G_SIGNAL_MATCH_DATA, 0, 0, nullptr, nullptr, this);
         gst_element_set_state(m_pipeline.get(), GST_STATE_NULL);
+        while (GST_OBJECT_REFCOUNT_VALUE(m_pipeline.get())>0){
+            printf("[%s:%d:%s]. m_pipeline count=%d\n",__FILE__,__LINE__,__func__,GST_OBJECT_REFCOUNT_VALUE(m_pipeline.get()));
+            gst_object_unref(m_pipeline.get());
+        }
+        m_pipeline = 0;
+    }
+    if (m_autoAudioSink) {
+        while (GST_OBJECT_REFCOUNT_VALUE(m_autoAudioSink.get())>0){
+            printf("[%s:%d:%s]. m_autoAudioSink count=%d\n",__FILE__,__LINE__,__func__,GST_OBJECT_REFCOUNT_VALUE(m_autoAudioSink.get()));
+            gst_object_unref(m_autoAudioSink.get());
+        }
+        m_autoAudioSink = 0;
+        printf("[%s:%d:%s]. \n",__FILE__,__LINE__,__func__);
     }
 }
 
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerBase.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerBase.cpp
index 334d35b1ae4..5e4320fdfc9 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerBase.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerBase.cpp
@@ -300,6 +300,14 @@ MediaPlayerPrivateGStreamerBase::~MediaPlayerPrivateGStreamerBase()
             g_signal_handlers_disconnect_by_data(appsink.get(), this);
         }
 #endif
+        if (m_videoSink) {
+            while (GST_OBJECT_REFCOUNT_VALUE(m_videoSink.get())>0){
+                printf("[%s:%d:%s]. m_videoSink count=%d\n",__FILE__,__LINE__,__func__,GST_OBJECT_REFCOUNT_VALUE(m_videoSink.get()));
+                gst_object_unref(m_videoSink.get());
+            }
+            m_videoSink = 0;
+            printf("[%s:%d:%s]. \n",__FILE__,__LINE__,__func__);
+        }
     }
 
     g_mutex_clear(&m_sampleMutex);
