--- a/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp	2017-09-15 06:47:02.165110036 +0200
+++ b/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp	2017-09-15 06:50:28.430641385 +0200
@@ -36,7 +36,6 @@
 #include <fcntl.h>
 #include <fnmatch.h>
 #include <malloc.h>
-#include <sys/eventfd.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
@@ -332,7 +331,10 @@
         return true;
 
     auto setupCgroups = [this]() -> bool {
-        int fd = eventfd(0, EFD_CLOEXEC);
+
+	// #define EFD_CLOEXEC 02000000
+
+        int fd = syscall(SYS_eventfd, 0, O_CLOEXEC);
         if (fd == -1) {
             LOG(MemoryPressure, "eventfd() failed: %m");
             return false;
--- a/Source/WebKit2/UIProcess/linux/MemoryPressureMonitor.cpp	2017-09-15 06:58:41.158971033 +0200
+++ b/Source/WebKit2/UIProcess/linux/MemoryPressureMonitor.cpp	2017-09-15 07:02:45.815128032 +0200
@@ -34,7 +34,7 @@
 #include <mutex>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/eventfd.h>
+#include <sys/syscall.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
@@ -243,7 +243,7 @@
 }
 
 MemoryPressureMonitor::MemoryPressureMonitor()
-    : m_eventFD(eventfd(0, EFD_CLOEXEC))
+    : m_eventFD(syscall(SYS_eventfd, 0, O_CLOEXEC))
 {
     if (m_eventFD == -1)
         return;
