diff -ruNP 00org/gcc/gcc.c 01new/gcc/gcc.c
--- 00org/gcc/gcc.c	2016-12-23 10:15:06.335638414 +0100
+++ 01new/gcc/gcc.c	2017-01-19 16:14:34.826777330 +0100
@@ -6316,11 +6316,110 @@
   return ret;
 }
 
+const char * g_appendFileName = "/tmp/log-gcc.txt";
+
+static void logCommandLine(int argc, char ** argv)
+{
+   FILE * outFile = fopen(g_appendFileName, "a");
+   
+   char cwd[1024];
+   getcwd(cwd, sizeof(cwd));
+   
+   fprintf(outFile, "pwd: %s\n", cwd);
+   
+   fprintf(outFile, "%s", "command: ");
+   
+   for (int i = 0; i < argc; i++) {
+      if (i != 0)
+         fprintf(outFile, "%s", " ");
+         
+      fprintf(outFile, "%s", argv[i]);
+   }
+   
+   fprintf(outFile, "%s", "\n");
+   
+   fclose(outFile);
+}
+
+int envVarIsSet(const char * envVar)
+{
+   const char * value = getenv(envVar);
+   if (value == NULL) {
+      return 0;
+   }
+   
+   if (strcmp(value, "y") == 0)
+      return 1;
+      
+   if (strcmp(value, "Y") == 0)
+      return 1;
+      
+   if (strcmp(value, "true") == 0)
+      return 1;
+      
+   if (strcmp(value, "True") == 0)
+      return 1;
+      
+   return 0;
+}
+
+int stringStartsWith(const char * text, const char * prefix)
+{
+   return strstr(text, prefix) == text;
+}
+
+void editArgs(int * argc, char *** argv)
+{
+  char ** orgArgv = *argv;
+  int orgArgc = *argc;
+  
+  if (envVarIsSet("SANDERGCC_TRACE_ARGV")) {
+     logCommandLine(orgArgc, orgArgv);
+  }
+
+  char ** newArgv = (char **)xmalloc(sizeof(char *) * (orgArgc + 10));
+  newArgv[0] = orgArgv[0];
+  
+  int newIndex = 1;
+  if (envVarIsSet("SANDERGCC_RECORD_SWITCHES")) {
+     newArgv[newIndex] = "-frecord-gcc-switches";
+     newIndex++;
+  }
+  
+  if (envVarIsSet("SANDERGCC_NO_OPTIMIZATION")) {
+     newArgv[newIndex] = "-O0";
+     newIndex++;
+  }
+  
+  if (envVarIsSet("SANDERGCC_FORCE_SYMBOLS")) {
+     newArgv[newIndex] = "-g";
+     newIndex++;
+  }
+    
+  for (int i = 1; i < orgArgc; i++) {
+     const char * orgArg = orgArgv[i];
+  
+     if (envVarIsSet("SANDERGCC_NO_OPTIMIZATION") && stringStartsWith(orgArg, "-O"))
+        continue;
+     
+     if (envVarIsSet("SANDERGCC_FORCE_SYMBOLS") && stringStartsWith(orgArg, "-g"))
+        continue;
+
+     newArgv[newIndex] = (char *)orgArg;
+     newIndex++;
+  }
+    
+  *argv = newArgv;
+  *argc = newIndex;
+}
+
 extern int main (int, char **);
 
 int
 main (int argc, char **argv)
 {
+  editArgs(&argc, &argv);
+
   size_t i;
   int value;
   int linker_was_run = 0;
